// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.1
// source: word_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindWordByDictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Word   string `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *FindWordByDictionaryRequest) Reset() {
	*x = FindWordByDictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWordByDictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWordByDictionaryRequest) ProtoMessage() {}

func (x *FindWordByDictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWordByDictionaryRequest.ProtoReflect.Descriptor instead.
func (*FindWordByDictionaryRequest) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{0}
}

func (x *FindWordByDictionaryRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *FindWordByDictionaryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindWordByDictionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WordMeanings []*WordMeaning `protobuf:"bytes,1,rep,name=word_meanings,json=wordMeanings,proto3" json:"word_meanings,omitempty"`
}

func (x *FindWordByDictionaryResponse) Reset() {
	*x = FindWordByDictionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindWordByDictionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindWordByDictionaryResponse) ProtoMessage() {}

func (x *FindWordByDictionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindWordByDictionaryResponse.ProtoReflect.Descriptor instead.
func (*FindWordByDictionaryResponse) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{1}
}

func (x *FindWordByDictionaryResponse) GetWordMeanings() []*WordMeaning {
	if x != nil {
		return x.WordMeanings
	}
	return nil
}

type Pronunciation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	UkAudioUrl string `protobuf:"bytes,2,opt,name=uk_audio_url,json=ukAudioUrl,proto3" json:"uk_audio_url,omitempty"`
	UsAudioUrl string `protobuf:"bytes,3,opt,name=us_audio_url,json=usAudioUrl,proto3" json:"us_audio_url,omitempty"`
}

func (x *Pronunciation) Reset() {
	*x = Pronunciation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pronunciation) ProtoMessage() {}

func (x *Pronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pronunciation.ProtoReflect.Descriptor instead.
func (*Pronunciation) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{2}
}

func (x *Pronunciation) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Pronunciation) GetUkAudioUrl() string {
	if x != nil {
		return x.UkAudioUrl
	}
	return ""
}

func (x *Pronunciation) GetUsAudioUrl() string {
	if x != nil {
		return x.UsAudioUrl
	}
	return ""
}

type Sentence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioUrl string `protobuf:"bytes,1,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`
	Text     string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Sentence) Reset() {
	*x = Sentence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sentence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sentence) ProtoMessage() {}

func (x *Sentence) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sentence.ProtoReflect.Descriptor instead.
func (*Sentence) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{3}
}

func (x *Sentence) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *Sentence) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Example struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pattern  string      `protobuf:"bytes,1,opt,name=pattern,proto3" json:"pattern,omitempty"`
	Examples []*Sentence `protobuf:"bytes,2,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *Example) Reset() {
	*x = Example{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Example) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Example) ProtoMessage() {}

func (x *Example) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Example.ProtoReflect.Descriptor instead.
func (*Example) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{4}
}

func (x *Example) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

func (x *Example) GetExamples() []*Sentence {
	if x != nil {
		return x.Examples
	}
	return nil
}

type CreateFavoriteWordMeaningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	WordMeaningId string `protobuf:"bytes,2,opt,name=word_meaning_id,json=wordMeaningId,proto3" json:"word_meaning_id,omitempty"`
}

func (x *CreateFavoriteWordMeaningRequest) Reset() {
	*x = CreateFavoriteWordMeaningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFavoriteWordMeaningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFavoriteWordMeaningRequest) ProtoMessage() {}

func (x *CreateFavoriteWordMeaningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFavoriteWordMeaningRequest.ProtoReflect.Descriptor instead.
func (*CreateFavoriteWordMeaningRequest) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFavoriteWordMeaningRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateFavoriteWordMeaningRequest) GetWordMeaningId() string {
	if x != nil {
		return x.WordMeaningId
	}
	return ""
}

type CreateFavoriteWordMeaningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteWordMeaningId string `protobuf:"bytes,1,opt,name=favorite_word_meaning_id,json=favoriteWordMeaningId,proto3" json:"favorite_word_meaning_id,omitempty"`
}

func (x *CreateFavoriteWordMeaningResponse) Reset() {
	*x = CreateFavoriteWordMeaningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFavoriteWordMeaningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFavoriteWordMeaningResponse) ProtoMessage() {}

func (x *CreateFavoriteWordMeaningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFavoriteWordMeaningResponse.ProtoReflect.Descriptor instead.
func (*CreateFavoriteWordMeaningResponse) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFavoriteWordMeaningResponse) GetFavoriteWordMeaningId() string {
	if x != nil {
		return x.FavoriteWordMeaningId
	}
	return ""
}

type DeleteFavoriteWordMeaningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteWordMeaningId string `protobuf:"bytes,1,opt,name=favorite_word_meaning_id,json=favoriteWordMeaningId,proto3" json:"favorite_word_meaning_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteFavoriteWordMeaningRequest) Reset() {
	*x = DeleteFavoriteWordMeaningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFavoriteWordMeaningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFavoriteWordMeaningRequest) ProtoMessage() {}

func (x *DeleteFavoriteWordMeaningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFavoriteWordMeaningRequest.ProtoReflect.Descriptor instead.
func (*DeleteFavoriteWordMeaningRequest) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFavoriteWordMeaningRequest) GetFavoriteWordMeaningId() string {
	if x != nil {
		return x.FavoriteWordMeaningId
	}
	return ""
}

func (x *DeleteFavoriteWordMeaningRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteFavoriteWordMeaningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFavoriteWordMeaningResponse) Reset() {
	*x = DeleteFavoriteWordMeaningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFavoriteWordMeaningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFavoriteWordMeaningResponse) ProtoMessage() {}

func (x *DeleteFavoriteWordMeaningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFavoriteWordMeaningResponse.ProtoReflect.Descriptor instead.
func (*DeleteFavoriteWordMeaningResponse) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{8}
}

type FindFavoriteWordMeaningsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex int64  `protobuf:"varint,1,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	PageSize  int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Word      string `protobuf:"bytes,4,opt,name=word,proto3" json:"word,omitempty"`
}

func (x *FindFavoriteWordMeaningsRequest) Reset() {
	*x = FindFavoriteWordMeaningsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFavoriteWordMeaningsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFavoriteWordMeaningsRequest) ProtoMessage() {}

func (x *FindFavoriteWordMeaningsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFavoriteWordMeaningsRequest.ProtoReflect.Descriptor instead.
func (*FindFavoriteWordMeaningsRequest) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{9}
}

func (x *FindFavoriteWordMeaningsRequest) GetPageIndex() int64 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *FindFavoriteWordMeaningsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindFavoriteWordMeaningsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindFavoriteWordMeaningsRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type FindFavoriteWordMeaningsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total                int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageCount            int64          `protobuf:"varint,2,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	FavoriteWordMeanings []*WordMeaning `protobuf:"bytes,3,rep,name=favorite_word_meanings,json=favoriteWordMeanings,proto3" json:"favorite_word_meanings,omitempty"`
}

func (x *FindFavoriteWordMeaningsResponse) Reset() {
	*x = FindFavoriteWordMeaningsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFavoriteWordMeaningsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFavoriteWordMeaningsResponse) ProtoMessage() {}

func (x *FindFavoriteWordMeaningsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFavoriteWordMeaningsResponse.ProtoReflect.Descriptor instead.
func (*FindFavoriteWordMeaningsResponse) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{10}
}

func (x *FindFavoriteWordMeaningsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindFavoriteWordMeaningsResponse) GetPageCount() int64 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *FindFavoriteWordMeaningsResponse) GetFavoriteWordMeanings() []*WordMeaning {
	if x != nil {
		return x.FavoriteWordMeanings
	}
	return nil
}

type WordMeaning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string         `protobuf:"bytes,1,opt,name=id,json=_id,proto3" json:"id,omitempty"`
	Word                  string         `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	PartOfSpeech          string         `protobuf:"bytes,3,opt,name=part_of_speech,json=partOfSpeech,proto3" json:"part_of_speech,omitempty"`
	Gram                  string         `protobuf:"bytes,4,opt,name=gram,proto3" json:"gram,omitempty"`
	Pronunciation         *Pronunciation `protobuf:"bytes,5,opt,name=pronunciation,proto3" json:"pronunciation,omitempty"`
	DefGram               string         `protobuf:"bytes,6,opt,name=def_gram,json=defGram,proto3" json:"def_gram,omitempty"`
	Definition            string         `protobuf:"bytes,7,opt,name=definition,proto3" json:"definition,omitempty"`
	Examples              []*Example     `protobuf:"bytes,8,rep,name=examples,proto3" json:"examples,omitempty"`
	OrderByNo             int64          `protobuf:"varint,9,opt,name=order_by_no,json=orderByNo,proto3" json:"order_by_no,omitempty"`
	QueryByWords          []string       `protobuf:"bytes,10,rep,name=query_by_words,json=queryByWords,proto3" json:"query_by_words,omitempty"`
	FavoriteWordMeaningId string         `protobuf:"bytes,11,opt,name=favorite_word_meaning_id,json=favoriteWordMeaningId,proto3" json:"favorite_word_meaning_id,omitempty"`
}

func (x *WordMeaning) Reset() {
	*x = WordMeaning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_word_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordMeaning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordMeaning) ProtoMessage() {}

func (x *WordMeaning) ProtoReflect() protoreflect.Message {
	mi := &file_word_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordMeaning.ProtoReflect.Descriptor instead.
func (*WordMeaning) Descriptor() ([]byte, []int) {
	return file_word_service_proto_rawDescGZIP(), []int{11}
}

func (x *WordMeaning) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WordMeaning) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordMeaning) GetPartOfSpeech() string {
	if x != nil {
		return x.PartOfSpeech
	}
	return ""
}

func (x *WordMeaning) GetGram() string {
	if x != nil {
		return x.Gram
	}
	return ""
}

func (x *WordMeaning) GetPronunciation() *Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

func (x *WordMeaning) GetDefGram() string {
	if x != nil {
		return x.DefGram
	}
	return ""
}

func (x *WordMeaning) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *WordMeaning) GetExamples() []*Example {
	if x != nil {
		return x.Examples
	}
	return nil
}

func (x *WordMeaning) GetOrderByNo() int64 {
	if x != nil {
		return x.OrderByNo
	}
	return 0
}

func (x *WordMeaning) GetQueryByWords() []string {
	if x != nil {
		return x.QueryByWords
	}
	return nil
}

func (x *WordMeaning) GetFavoriteWordMeaningId() string {
	if x != nil {
		return x.FavoriteWordMeaningId
	}
	return ""
}

var File_word_service_proto protoreflect.FileDescriptor

var file_word_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x4a, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64,
	0x57, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64,
	0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x61,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x67, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x75, 0x6b, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x55, 0x72, 0x6c, 0x22, 0x3b, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x4d, 0x0a, 0x07, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22,
	0x63, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x22, 0x74, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65,
	0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a, 0x01,
	0x0a, 0x1f, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x20, 0x46,
	0x69, 0x6e, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d,
	0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x16, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65,
	0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x88, 0x03, 0x0a, 0x0b,
	0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x0f, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x5f, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x70, 0x65, 0x65,
	0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x4f, 0x66,
	0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x37, 0x0a, 0x0d, 0x70, 0x72,
	0x6f, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x5f, 0x67, 0x72, 0x61, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x47, 0x72, 0x61, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x08, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x62, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x37, 0x0a,
	0x18, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d,
	0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61,
	0x6e, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x32, 0xa3, 0x03, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f,
	0x72, 0x64, 0x42, 0x79, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1f,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x42, 0x79, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x24,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x61, 0x6e,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_word_service_proto_rawDescOnce sync.Once
	file_word_service_proto_rawDescData = file_word_service_proto_rawDesc
)

func file_word_service_proto_rawDescGZIP() []byte {
	file_word_service_proto_rawDescOnce.Do(func() {
		file_word_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_word_service_proto_rawDescData)
	})
	return file_word_service_proto_rawDescData
}

var file_word_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_word_service_proto_goTypes = []interface{}{
	(*FindWordByDictionaryRequest)(nil),       // 0: pb.FindWordByDictionaryRequest
	(*FindWordByDictionaryResponse)(nil),      // 1: pb.FindWordByDictionaryResponse
	(*Pronunciation)(nil),                     // 2: pb.Pronunciation
	(*Sentence)(nil),                          // 3: pb.Sentence
	(*Example)(nil),                           // 4: pb.Example
	(*CreateFavoriteWordMeaningRequest)(nil),  // 5: pb.CreateFavoriteWordMeaningRequest
	(*CreateFavoriteWordMeaningResponse)(nil), // 6: pb.CreateFavoriteWordMeaningResponse
	(*DeleteFavoriteWordMeaningRequest)(nil),  // 7: pb.DeleteFavoriteWordMeaningRequest
	(*DeleteFavoriteWordMeaningResponse)(nil), // 8: pb.DeleteFavoriteWordMeaningResponse
	(*FindFavoriteWordMeaningsRequest)(nil),   // 9: pb.FindFavoriteWordMeaningsRequest
	(*FindFavoriteWordMeaningsResponse)(nil),  // 10: pb.FindFavoriteWordMeaningsResponse
	(*WordMeaning)(nil),                       // 11: pb.WordMeaning
}
var file_word_service_proto_depIdxs = []int32{
	11, // 0: pb.FindWordByDictionaryResponse.word_meanings:type_name -> pb.WordMeaning
	3,  // 1: pb.Example.examples:type_name -> pb.Sentence
	11, // 2: pb.FindFavoriteWordMeaningsResponse.favorite_word_meanings:type_name -> pb.WordMeaning
	2,  // 3: pb.WordMeaning.pronunciation:type_name -> pb.Pronunciation
	4,  // 4: pb.WordMeaning.examples:type_name -> pb.Example
	0,  // 5: pb.WordService.FindWordByDictionary:input_type -> pb.FindWordByDictionaryRequest
	5,  // 6: pb.WordService.CreateFavoriteWordMeaning:input_type -> pb.CreateFavoriteWordMeaningRequest
	7,  // 7: pb.WordService.DeleteFavoriteWordMeaning:input_type -> pb.DeleteFavoriteWordMeaningRequest
	9,  // 8: pb.WordService.FindFavoriteWordMeanings:input_type -> pb.FindFavoriteWordMeaningsRequest
	1,  // 9: pb.WordService.FindWordByDictionary:output_type -> pb.FindWordByDictionaryResponse
	6,  // 10: pb.WordService.CreateFavoriteWordMeaning:output_type -> pb.CreateFavoriteWordMeaningResponse
	8,  // 11: pb.WordService.DeleteFavoriteWordMeaning:output_type -> pb.DeleteFavoriteWordMeaningResponse
	10, // 12: pb.WordService.FindFavoriteWordMeanings:output_type -> pb.FindFavoriteWordMeaningsResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_word_service_proto_init() }
func file_word_service_proto_init() {
	if File_word_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_word_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindWordByDictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindWordByDictionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pronunciation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sentence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Example); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFavoriteWordMeaningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFavoriteWordMeaningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFavoriteWordMeaningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFavoriteWordMeaningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFavoriteWordMeaningsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFavoriteWordMeaningsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_word_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordMeaning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_word_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_word_service_proto_goTypes,
		DependencyIndexes: file_word_service_proto_depIdxs,
		MessageInfos:      file_word_service_proto_msgTypes,
	}.Build()
	File_word_service_proto = out.File
	file_word_service_proto_rawDesc = nil
	file_word_service_proto_goTypes = nil
	file_word_service_proto_depIdxs = nil
}
